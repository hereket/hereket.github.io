<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hereket</title>
    <link>https://hereket.github.io/</link>
    <description>Recent content on Hereket</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Jul 2023 15:25:51 +0500</lastBuildDate><atom:link href="https://hereket.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vim tiny IDE: edit-compile-edit cycle for fast error browsing</title>
      <link>https://hereket.github.io/posts/vim_ide_compile_cycle/</link>
      <pubDate>Mon, 24 Jul 2023 15:25:51 +0500</pubDate>
      
      <guid>https://hereket.github.io/posts/vim_ide_compile_cycle/</guid>
      <description>This is continuation of previous post: VIM and Tmux as a tiny quasi IDE
Intro Here in this post I will show you how I use a bit of scripting together with vim&amp;rsquo;s quickfix window to speed up my workflow of finding compilation errors. There reason to use bash instead of makefiles is because it is easier for me to reason what is happening in bash script than in makefile and it is just easier to debug when compared to makefiles.</description>
    </item>
    
    <item>
      <title>VIM and Tmux as a tiny quasi IDE</title>
      <link>https://hereket.github.io/posts/vim_tmux_ide/</link>
      <pubDate>Sat, 22 Jul 2023 17:22:46 +0500</pubDate>
      
      <guid>https://hereket.github.io/posts/vim_tmux_ide/</guid>
      <description>watch video
There are multiple approaches to development and everyone has a some style of how they like to approach this process. Every task requires could require totally different approach and different IDE. So if I do native Android or Flutter developemnt it is natural for me to Android Stuio, for Java code it is Intellij, for Qt it is more comforatable if Qt Creator is used.
Here I use pharase &amp;ldquo;quasi IDE&amp;rdquo; to separate from trandional understanding of an IDE.</description>
    </item>
    
    <item>
      <title>Easy todo and notes management with VIM, dmenu and bash</title>
      <link>https://hereket.github.io/posts/todo_note_management/</link>
      <pubDate>Sat, 22 Jul 2023 02:24:15 +0500</pubDate>
      
      <guid>https://hereket.github.io/posts/todo_note_management/</guid>
      <description>I have been taking notes and managing my todo lists for quite some time. During this time I have used different tools for both. For note taking I tried evernote, google docs, obsidian, OneNote, regular files and quite a few others. The same goes for todo lists. I probably used everything from top 20 list for apps for todo management (even taskwarrior). But in the end I ended up using just neovim, dmenu and a little bit of shell magic.</description>
    </item>
    
    <item>
      <title>Instant code reload in Android</title>
      <link>https://hereket.github.io/posts/instant_code_reload/</link>
      <pubDate>Fri, 21 Jul 2023 02:00:19 +0500</pubDate>
      
      <guid>https://hereket.github.io/posts/instant_code_reload/</guid>
      <description>Introduction Here I am presenting one possible way to do &amp;ldquo;on the fly code reloading&amp;rdquo; of JNI code. The whole code is C/C++ compiled in 2 shared libraries and realoded on demand without restaring the application.
This example uses a game tiny &amp;ldquo;game&amp;rdquo; where you just walk around space. This is just a placeholder idea borrowed from Casey Muratori&amp;rsquo;s Handmade Hero youtube series.
The build process used in this project is described in: Build android apk from command line without gradle post.</description>
    </item>
    
    <item>
      <title>Build android apk from command line without gradle</title>
      <link>https://hereket.github.io/posts/android_from_command_line/</link>
      <pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hereket.github.io/posts/android_from_command_line/</guid>
      <description>Introduction This is post is similar to the one about building flutter but a bit different. Actually this one was writter a few years prior to writing flutter version but just never got published. Since then some steps has changed and I moved to Java 11. But you if you still build with java 8 old build method is still surprisingly functional.
So the idea is to build and APK file which then can be installed on an android phone without using gradle and doing each step &amp;ldquo;manually&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Building flutter android app without gradle</title>
      <link>https://hereket.github.io/posts/flutter_without_gradle/</link>
      <pubDate>Thu, 13 Jul 2023 12:01:36 +0500</pubDate>
      
      <guid>https://hereket.github.io/posts/flutter_without_gradle/</guid>
      <description>Initial draft
Introduction Flutter is a very useful framework which does quite a lot of heavy lifting and hides all the dirty details inside a black box. It is very good when you want get the job done but I really like opening black boxes as I really don&amp;rsquo;t like magic.
The sole reasoning behind this project is to build a &amp;lsquo;hello world&amp;rsquo; project with as few steps as possible and in the end build an apk file which could be installed on an android phone.</description>
    </item>
    
    <item>
      <title>Web analalytics effect on a mobile page</title>
      <link>https://hereket.github.io/posts/web_analytics_effects/</link>
      <pubDate>Thu, 06 Jul 2023 20:48:32 +0500</pubDate>
      
      <guid>https://hereket.github.io/posts/web_analytics_effects/</guid>
      <description>What happened? So I create this site to test some ideas this time I chose to use a &amp;lsquo;static site&amp;rsquo; approach. There is no specific reason why I chose it to be this way it is just I wanted to try something that I have not tried before. My last test was with django.
So one of my first experiments I wanted to do is to stack different web analytics tool on the page and see how they behave and report data for later comparison.</description>
    </item>
    
    <item>
      <title>Lorem ipsum - static</title>
      <link>https://hereket.github.io/posts/lorem/</link>
      <pubDate>Mon, 03 Jul 2023 16:05:40 +0500</pubDate>
      
      <guid>https://hereket.github.io/posts/lorem/</guid>
      <description>What is this It is just &amp;rsquo;lorem ipsum&amp;rsquo; text for myself to have somewhere on the web where I can easily get it when I need it.
.
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam ut mi quis quam bibendum rutrum. Integer egestas convallis urna nec egestas. Donec metus elit, semper quis turpis at, molestie egestas erat. Quisque libero purus, dictum nec auctor quis, convallis ac leo. Morbi mollis elementum risus, sit amet finibus turpis fringilla non.</description>
    </item>
    
    <item>
      <title>Contact me</title>
      <link>https://hereket.github.io/contact/</link>
      <pubDate>Sat, 03 Jun 2023 16:05:40 +0500</pubDate>
      
      <guid>https://hereket.github.io/contact/</guid>
      <description>Email: info123@hereket.com
Once you write me I will write you back from real email.</description>
    </item>
    
    <item>
      <title>Dna Coloring app-</title>
      <link>https://hereket.github.io/dna_coloring/</link>
      <pubDate>Sat, 03 Jun 2023 16:05:40 +0500</pubDate>
      
      <guid>https://hereket.github.io/dna_coloring/</guid>
      <description>DNA</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://hereket.github.io/posts/first/</link>
      <pubDate>Sat, 03 Jun 2023 16:05:40 +0500</pubDate>
      
      <guid>https://hereket.github.io/posts/first/</guid>
      <description>Start Hello. Initial post in this site. Currently the plan is to use it to test diffent technologies, write some thoughts and share some hobby projects. At the same time I am planning to practice my writing skills.
My plan is to publish a lot of raw content without deep work on it but we will see how it turns out to be.</description>
    </item>
    
  </channel>
</rss>
