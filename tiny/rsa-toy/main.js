function _bytesToHexString(e){let t="";for(let n=0;n<e.length;n++){let r=e[n].toString(16);2==r.length?t+=r:1==r.length&&(t+=`0${r}`)}return t}function showPreparedInput(e,t){header=e.slice(0,11),placeholder=e.slice(11,t),data=e.slice(t);let n=[],r=document.createElement("span");r.classList.add("hex-prefix"),r.innerHTML="0x",n.push(r.outerHTML);let o=document.createElement("span");o.classList.add("rsa-input-header"),o.innerHTML=_bytesToHexString(header),n.push(o.outerHTML);let s=document.createElement("span");s.classList.add("rsa-input-placeholder"),s.innerHTML=_bytesToHexString(placeholder),n.push(s.outerHTML);let l=document.createElement("span");return l.classList.add("rsa-input-data"),l.innerHTML=_bytesToHexString(data),n.push(l.outerHTML),n.join("")}function showRawDecryptedData(e,t){header=e.slice(0,11),placeholder=e.slice(11,t),data=e.slice(t);let n=[],r=document.createElement("span");r.classList.add("hex-prefix"),r.innerHTML="0x",n.push(r.outerHTML);let o=document.createElement("span");o.innerHTML=_bytesToHexString(header),n.push(o.outerHTML);let s=document.createElement("span");s.innerHTML=_bytesToHexString(placeholder),n.push(s.outerHTML);let l=document.createElement("span");return l.classList.add("decoded-actual-data"),l.innerHTML=_bytesToHexString(data),n.push(l.outerHTML),n.join("")}function showHex(e){let t=[],n=document.createElement("span");n.classList.add("hex-prefix"),n.innerHTML="0x",t.push(n.outerHTML);let r=document.createElement("span");return r.innerHTML=_bytesToHexString(e),t.push(r.outerHTML),t.join("")}const RSA_HEADER_LENGTH=11;let globalDecodeWait=null;function showHide(e,t){let n=document.querySelector(e),r=document.querySelector(t);n.classList.remove("hidden"),r.classList.add("hidden")}function isHexString(e){return((e=e.trim()).startsWith("0x")||e.startsWith("0X"))&&(e=e.slice(2)),/^[abcdefABCDEF0123456789]/.test(e)}function parseHexIntoBytes(e){let t=[];if(!isHexString(e=e.trim()))return t;(e.startsWith("0x")||e.startsWith("0X"))&&(e=e.slice(2)).length%2!=0&&(e="0"+e);for(let n=0;n<e.length;n+=2)t.push(parseInt(e.slice(n,n+2),16));return t}function bytesToHexString(e){let t="0x";for(let n=0;n<e.length;n++){let r=e[n].toString(16);2==r.length?t+=r:1==r.length&&(t+=`0${r}`)}return t}function bytesToRealString(e){let t="";for(let n=0;n<e.length;n++){t+=String.fromCharCode(e[n])}return t}function getBytesFromNode(e){return parseHexIntoBytes(document.querySelector(e).value)}function setupInput(e){let t=document.querySelector("#private-exponent"),n=document.querySelector("#public-expoenent"),r=document.querySelector("#modulus");document.querySelector("#user-input-to-encrypt").addEventListener("keydown",(function(t){doCalculations(e)})),t.addEventListener("keydown",(function(t){doCalculations(e)})),n.addEventListener("keydown",(function(t){doCalculations(e)})),r.addEventListener("keydown",(function(t){doCalculations(e)}))}function encryptData(e,t,n,r){let o={rawInput:t,exponent:n,modulus:r};r.length;let s=stringToIntArray(t),l=new Uint8ClampedArray(r.length);l[1]=2,o.rawInputBytes=stringToIntArray(t);for(let e=2;e<r.length-s.length-1;e++)l[e]=Math.floor(1+254*Math.random());const a=r.length-s.length;for(let e=0;e<s.length;e++)l[a+e]=s[e];o.input=l;let u=arrayFromWasm(e,r),c=arrayFromWasm(e,n),i=arrayFromWasm(e,l);document.querySelector("#input-prepared").innerHTML=showPreparedInput(l,a),document.querySelector("#input-exponent").innerHTML=showHex(n),document.querySelector("#input-modulus").innerHTML=showHex(r);let d=e.instance.exports.TestEncrypt(i.byteOffset,i.length,u.byteOffset,u.length,c.byteOffset,c.length),p=e.instance.exports.getByteBufferSize(d),m=e.instance.exports.getByteBufferBytes(d),y=new Uint8ClampedArray(e.instance.exports.memory.buffer,m,p);return document.querySelector("#encryption-result").innerHTML=showHex(y),o.encrypted=y,o}async function decryptData(e,t){let n=parseHexIntoBytes(document.querySelector("#private-exponent").value),r=document.querySelector("#decryption-input"),o=document.querySelector("#decryption-exponent"),s=document.querySelector("#decryption-modulus");r.innerHTML=showHex(t.encrypted),o.innerHTML=showHex(n),s.innerHTML=showHex(t.modulus);const l=arrayFromWasm(e,t.modulus),a=arrayFromWasm(e,n),u=arrayFromWasm(e,t.encrypted);encryptedBuffer=e.instance.exports.TestDecrypt(u.byteOffset,t.encrypted.length,l.byteOffset,l.length,a.byteOffset,a.length);const c=e.instance.exports.getByteBufferSize(encryptedBuffer);if(c==t.modulus.length){const t=e.instance.exports.getByteBufferBytes(encryptedBuffer),n=new Uint8ClampedArray(e.instance.exports.memory.buffer,t,c);if(n[1]>2)return void console.log("ERROR: RSA padding type > 2");let r;for(r=2;r<c;r++)if(0===n[r]){r+=1;break}const o=n.slice(r);document.querySelector("#decryption-result-full-hex").innerHTML=showRawDecryptedData(n,r),document.querySelector("#decryption-result-hex").innerHTML=showHex(o),document.querySelector("#decryption-result-str").innerHTML=bytesToRealString(o)}else-1==c?console.log("Decryption length is -1"):console.log("Decrypted output length:",c)}let globalInputMemory={};function didInputChange(){function e(e){let t=document.querySelector(e).value;return globalInputMemory[e]!==t&&(globalInputMemory[e]=t,!0)}const t=e("#private-exponent"),n=e("#public-expoenent"),r=e("#modulus"),o=e("#user-input-to-encrypt");return!!(t||n||r||o)}function doCalculations(e){e.instance.exports.memory;setTimeout((()=>{if(!didInputChange())return;const t=getBytesFromNode("#private-exponent"),n=getBytesFromNode("#public-expoenent"),r=getBytesFromNode("#modulus");if(t.length<1||n.length<1||r.length<1)return;let o=document.querySelector("#user-input-to-encrypt").value;const s=r.length-RSA_HEADER_LENGTH;o.length>s&&(o=o.slice(0,s),document.querySelector("#user-input-to-encrypt").value=o),document.querySelector("#user-input-to-encrypt-hex").innerHTML=showHex(stringToIntArray(o));let l=encryptData(e,o,n,r);globalDecodeWait&&(clearTimeout(globalDecodeWait),globalDecodeWait=null),showHide("#decryption-loader","#decryption-content"),globalDecodeWait=setTimeout((()=>{decryptData(e,l),showHide("#decryption-content","#decryption-loader")}),1e3)}),10)}function arrayFromWasm(e,t){const n=e.instance.exports.memory,r=e.instance.exports.AllocateBytes(t.length),o=new Uint8ClampedArray(n.buffer,r,t.length);return o.set(t),o}function stringToIntArray(e){let t=[];for(let n=0;n<e.length;n++)t.push(e.charCodeAt(n));return t}function noop(...e){}const libm={cos:Math.cos,sin:Math.sin,round:Math.round,fabs:Math.abs,fmax:Math.max,fmin:Math.min,memset:noop,memcpy:noop,LogD:console.log,LogI:console.log,LogU:console.log,LogX:console.log,rand:Math.random};function makeEnvironment(...e){return new Proxy(e,{get(t,n,r){for(let t of e)if(t.hasOwnProperty(n))return t[n];return(...e)=>{console.error("Not Implemented: "+n,e)}}})}const memory=new WebAssembly.Memory({initial:10,maximum:1e4});WebAssembly.instantiateStreaming(fetch("program.wasm"),{env:makeEnvironment(libm),js:{mem:memory}}).then((e=>{setupInput(e),doCalculations(e)}));
